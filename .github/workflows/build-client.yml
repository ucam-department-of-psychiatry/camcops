---
# yamllint disable rule:line-length
name: Build client
# yamllint disable-line rule:truthy
on:
    push:
        paths:
            - '**.cpp'
            - '**.h'
            - tablet_qt/camcops.pro
            - .github/scripts/add_apt_sources.sh
            - .github/scripts/change_apt_mirror.sh
            - .github/scripts/build_client.sh
            - .github/workflows/build-client.yml
jobs:
    build-client:
        runs-on: ubuntu-22.04
        steps:
            - uses: actions/checkout@v4
            - name: Work out Qt release
              # We use the version of Qt built by the build-qt.yml action. This
              # abuses the GitHub release mechanism by making a draft release
              # with the Qt tarball attached as an asset. As long as we don't
              # publish this release it will only be seen by us. However,
              # because it is a draft release, it ends up with the name
              # "untagged-<some random id>". This random id is created by GitHub
              # and will change if the release is edited through the GitHub UI.
              id: vars
              run: |
                  set -euo pipefail
                  QT_DRAFT_ID="$(cat ${GITHUB_WORKSPACE}/.github/scripts/qt_untagged_release_id.txt)"
                  echo "qt_draft_id=${QT_DRAFT_ID}" >> $GITHUB_OUTPUT
            - name: Download Qt
              uses: dsaltares/fetch-gh-release-asset@1.1.2
              with:
                  # Can't do this from a different repo because the release
                  # isn't public
                  # Has to download to GITHUB_WORKSPACE
                  file: qt.tgz
                  token: ${{ secrets.GITHUB_TOKEN }}
                  # The release ID is set by the build-qt.yml action
                  # but the tagging is broken somehow. This is brittle
                  # because editing the release on GitHub will change
                  # the tag (which isn't a proper tag)
                  version: 'tags/${{ steps.vars.outputs.qt_draft_id }}'
            - name: Install Qt
              run: |
                  set -euo pipefail
                  mv ${GITHUB_WORKSPACE}/qt.tgz ${HOME}
                  cd ${HOME}
                  ls
                  # Remove home/runner from paths
                  tar -xvzf qt.tgz --strip-components=2
                  ls
                  ls qt_local_build
            - name: Ubuntu prerequisites
              run: |
                  set -euo pipefail
                  ${GITHUB_WORKSPACE}/.github/scripts/change_apt_mirror.sh
                  ${GITHUB_WORKSPACE}/.github/scripts/add_apt_sources.sh
                  sudo apt-get -y install \
                  libcups2-dev \
                  libdbus-1-dev \
                  libdrm-dev \
                  libegl1-mesa-dev \
                  libgl-dev \
                  libharfbuzz-dev \
                  libopengl-dev \
                  libpulse-dev \
                  libts-dev \
                  libudev-dev \
                  libvdpau-dev \
                  libx11-xcb-dev \
                  libxcb-icccm4 \
                  libxcb-xkb1 \
                  libxcb-icccm4 \
                  libxcb-image0 \
                  libxcb-render-util0 \
                  libxcb-randr0 \
                  libxcb-keysyms1 \
                  libxcb-xinerama0 \
                  libxcb-cursor0 \
                  '^libxcb.*-dev' \
                  libxkbcommon-dev \
                  libxkbcommon-x11-dev \
                  libxrandr-dev \
            - name: Build client
              run: |
                  set -euo pipefail
                  export CAMCOPS_QT6_BASE_DIR=${HOME}/qt_local_build
                  ${GITHUB_WORKSPACE}/.github/scripts/build_client.sh
